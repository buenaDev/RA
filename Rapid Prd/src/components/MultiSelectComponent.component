<apex:component controller="MultiselectController"  allowDML="true" >
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <style type="text/css">
    .popup 
    {
        background-color: #f3f3ec;
        padding-bottom:40px;
        margin-bottom:0px;
        overflow-x: hidden;
    }
    .popupBg
    {
        background-color: #f3f3ec;
    }
    .bg
    {
        background-color: #f3f3ec;
        width:100%;
    }
    </style>
    
    <apex:attribute name="leftLabel" description="Label on left listbox."  type="String" required="true" />
    <apex:attribute name="rightLabel" description="Label on right listbox." type="String" required="true" />
    <apex:attribute name="size" description="Size of listboxes."  type="Integer" required="true" />
    <apex:attribute name="width" description="Width of listboxes."  type="String" required="true" />
    <apex:attribute name="left1Options" description="Options list for left listbox." type="SelectOption[]" required="true" assignTo="{!leftOptions}" />
    <apex:attribute name="right1Options" description="Options list for right listbox." type="SelectOption[]"
        required="true" assignTo="{!rightOptions}" />
    <apex:attribute name="RecordId" description="Record Id" type="String" required="true" assignTo="{!accountId}" />
    <apex:attribute name="ObjType" description="" type="String" required="true" assignTo="{!sObjType}" />
    <apex:attribute name="obuttonVisible" description="" type="Boolean" required="false" assignTo="{!buttonVisible}" default="true" />
    <apex:outputPanel id="popup" styleClass="bg">
        <apex:outputPanel styleClass="popupBg" layout="block" rendered="true"/>
        <apex:outputLabel styleclass="labelCol" > Partner Category</apex:outputLabel>
        <apex:outputPanel styleClass="popup requiredBlock" layout="block" rendered="true">
            <table class="layout">
                <tbody>
                    <tr>
                        <td bgColor="#C00">
                        </td>
                        <td class="selectCell">
                            <apex:outputPanel layout="block" styleClass="selectTitle">
                                <apex:outputLabel value="{!leftLabel}" 
                                    for="multiselectPanel:leftList" />
                            </apex:outputPanel>
                            <select id="{!$Component.multiselectPanel}:leftList" 
                                class="multilist" multiple="multiple" size="{!size}" 
                                style="width: {!width};">
                                <apex:repeat value="{!leftOptions}" var="option">
                                    <option value="{!option.value}">{!option.label}</option>
                                </apex:repeat>
                            </select>
                        </td>
                        <td class="buttonCell">
                            <apex:outputPanel layout="block" styleClass="text">Add</apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="text">
                                <apex:outputLink value="javascript:moveSelectedOptions('{!$Component.multiselectPanel}:leftList', 
                                    '{!$Component.multiselectPanel}:rightList', '{!$Component.leftHidden}', 
                                    '{!$Component.rightHidden}');"
                                    id="btnRight">
                                    <apex:image value="/s.gif" alt="Add" styleClass="rightArrowIcon"
                                        title="Add" />
                                </apex:outputLink>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="text">
                                <apex:outputLink value="javascript:moveSelectedOptions('{!$Component.multiselectPanel}:rightList', 
                                    '{!$Component.multiselectPanel}:leftList', '{!$Component.rightHidden}', 
                                    '{!$Component.leftHidden}');"
                                    id="btnLeft">
                                    <apex:image value="/s.gif" alt="Remove"
                                        styleClass="leftArrowIcon" title="Remove" />
                                </apex:outputLink>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="duelingText">Remove</apex:outputPanel>
                        </td>
                        <td class="selectCell">
                            <apex:outputPanel layout="block" styleClass="selectTitle">
                                <apex:outputLabel value="{!rightLabel}" for="multiselectPanel:rightList" />
                            </apex:outputPanel>
                            <select id="{!$Component.multiselectPanel}:rightList" 
                                class="multilist" multiple="multiple" size="{!size}" 
                                style="width: {!width};" required="true">
                                <apex:repeat value="{!rightOptions}" var="option">
                                    <option value="{!option.value}">{!option.label}</option>
                                </apex:repeat>
                            </select>
                        </td>
                        <td class="buttonCell">
                            <apex:outputPanel layout="block"
                                styleClass="text">Up</apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="text">
                                <apex:outputLink value="javascript:slideSelectedOptionsUp('{!$Component.multiselectPanel}:rightList', 
                                    '{!$Component.rightHidden}');"
                                    id="upBtn">
                                    <apex:image value="/s.gif" alt="Up" styleClass="upArrowIcon"
                                        title="Up" />
                                </apex:outputLink>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="text">
                                <apex:outputLink value="javascript:slideSelectedOptionsDown('{!$Component.multiselectPanel}:rightList', 
                                    '{!$Component.rightHidden}');"
                                    id="downBtn">
                                    <apex:image value="/s.gif" alt="Down" styleClass="downArrowIcon"
                                        title="Down" />
                                </apex:outputLink>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" styleClass="text">Down</apex:outputPanel>
                        </td>
                    </tr>
                </tbody>
            </table>
            <apex:inputHidden value="{!leftOptionsHidden}" id="leftHidden" />
            <apex:inputHidden value="{!rightOptionsHidden}" id="rightHidden" />
            <table>
                <tr>
                    <td>
                        <apex:commandButton id="btnAccount" value="Save" action="{!saveAccount}" oncomplete="RefreshPrimaryTab();" rendered="{!If(sObjType=='Account' && buttonVisible,true,false)}"/>
                        <apex:commandButton id="btnLead" value="Save" action="{!saveLead}"  onClick="closeWin();" rendered="{!If(sObjType=='Lead' && buttonVisible,true,false)}"/><!--oncomplete="closeWin();"-->
                    </td>
                    <td>
                        <apex:commandButton id="btnCancel" value="Cancel" oncomplete="RefreshPrimaryTab();" rendered="{!buttonVisible}"/>
                    </td>
                </tr>
            </table>
        </apex:outputPanel>
    </apex:outputPanel>
    
    <script type="text/javascript">
        if (!buildOutputString) {
          // Create a string from the content of a listbox
          var buildOutputString = function(listBox, hiddenInput) {
            var str = '';
        
            for ( var x = 0; x < listBox.options.length; x++) {
              str += encodeURIComponent(listBox.options[x].value) + '&'
                  + encodeURIComponent(listBox.options[x].text) + '&';
            }
            str.length--;
        
            hiddenInput.value = str.slice(0, -1);
          }
        }
        
        if (!moveSelectedOptions) {
          // Move the selected options in the idFrom listbox to the idTo
          // listbox, updating the corresponding strings in idHdnFrom and
          // idHdnTo
          var moveSelectedOptions = function(idFrom, idTo, idHdnFrom, idHdnTo) {
            listFrom = document.getElementById(idFrom);
            listTo = document.getElementById(idTo);
        
            for ( var x = 0; x < listTo.options.length; x++) {
              listTo.options[x].selected = false;
            }
        
            for ( var x = 0; x < listFrom.options.length; x++) {
              if (listFrom.options[x].selected == true) {
                listTo.appendChild(listFrom.options[x]);
                x--;
              }
            }
        
            listTo.focus();
        
            buildOutputString(listFrom, document.getElementById(idHdnFrom));
            buildOutputString(listTo, document.getElementById(idHdnTo));
          }
        }
        
        if (!slideSelectedOptionsUp) {
          // Slide the selected options in the idList listbox up by one position,
          // updating the corresponding string in idHidden
          var slideSelectedOptionsUp = function(idList, idHidden) {
            listBox = document.getElementById(idList);
        
            var len = listBox.options.length;
        
            if (len > 0 && listBox.options[0].selected == true) {
              return;
            }
        
            for ( var x = 1; x < len; x++) {
              if (listBox.options[x].selected == true) {
                listBox.insertBefore(listBox.options[x],
                    listBox.options[x - 1]);
              }
            }
        
            listBox.focus();
        
            buildOutputString(listBox, document.getElementById(idHidden));
          }
        }
        
        if (!slideSelectedOptionsDown) {
          // Slide the selected options in the idList listbox down by one position,
          // updating the corresponding string in idHidden
          var slideSelectedOptionsDown = function(idList, idHidden) {
            listBox = document.getElementById(idList);
        
            var len = listBox.options.length;
        
            if (len > 0 && listBox.options[len - 1].selected == true) {
              return;
            }
        
            for ( var x = listBox.options.length - 2; x >= 0; x--) {
              if (listBox.options[x].selected == true) {
                listBox.insertBefore(listBox.options[x + 1],
                    listBox.options[x]);
              }
            }
        
            listBox.focus();
        
            buildOutputString(listBox, document.getElementById(idHidden));
          }
        }
        
        // initialize the string representations
        buildOutputString(document.getElementById('{!$Component.multiselectPanel}:leftList'), 
            document.getElementById('{!$Component.leftHidden}'));
        buildOutputString(document.getElementById('{!$Component.multiselectPanel}:rightList'), 
            document.getElementById('{!$Component.rightHidden}'));
                      
                        
            $("[id$='btnCancel']").click(function(e){
                e.preventDefault();
                console.log($("select[id$='rightList']").attr("id"));
                $("select[id$='rightList']").removeAttr('required');
                var consoleVar = sforce.console.isInConsole();
                console.log(consoleVar );
            });
    
    </script>
</apex:component>